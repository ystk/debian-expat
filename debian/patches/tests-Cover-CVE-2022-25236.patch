From: Sebastian Pipping <sebastian@pipping.org>
Date: Sat, 12 Feb 2022 00:51:43 +0100
Subject: tests: Cover CVE-2022-25236
Origin: https://github.com/libexpat/libexpat/commit/2de077423fb22750ebea599677d523b53cb93b1d
Bug: https://github.com/libexpat/libexpat/pull/561
---
 expat/tests/runtests.c | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

--- a/tests/runtests.c
+++ b/tests/runtests.c
@@ -150,6 +150,10 @@ dummy_start_element(void *userData,
                     const XML_Char *name, const XML_Char **atts)
 {}
 
+static void XMLCALL
+dummy_end_element(void *userData, const XML_Char *name)
+{}
+
 
 /*
  * Character & encoding tests.
@@ -1413,6 +1417,35 @@ START_TEST(test_ns_unbound_prefix_on_ele
 }
 END_TEST
 
+START_TEST(test_ns_separator_in_uri) {
+  struct test_case {
+    enum XML_Status expectedStatus;
+    const char *doc;
+  };
+  struct test_case cases[] = {
+      {XML_STATUS_OK, "<doc xmlns='one_two' />"},
+      {XML_STATUS_ERROR, "<doc xmlns='one&#x0A;two' />"},
+  };
+
+  size_t i = 0;
+  size_t failCount = 0;
+  for (; i < sizeof(cases) / sizeof(cases[0]); i++) {
+    XML_Parser parser = XML_ParserCreateNS(NULL, '\n');
+    XML_SetElementHandler(parser, dummy_start_element, dummy_end_element);
+    if (XML_Parse(parser, cases[i].doc, (int)strlen(cases[i].doc),
+                  /*isFinal*/ XML_TRUE)
+        != cases[i].expectedStatus) {
+      failCount++;
+    }
+    XML_ParserFree(parser);
+  }
+
+  if (failCount) {
+    fail("Namespace separator handling is broken");
+  }
+}
+END_TEST
+
 /* Test for signed integer overflow CVE-2022-23852 */
 #if defined(XML_CONTEXT_BYTES)
 START_TEST(test_get_buffer_3_overflow) {
@@ -1504,6 +1537,7 @@ make_suite(void)
     tcase_add_test(tc_namespace, test_ns_duplicate_attrs_diff_prefixes);
     tcase_add_test(tc_namespace, test_ns_unbound_prefix_on_attribute);
     tcase_add_test(tc_namespace, test_ns_unbound_prefix_on_element);
+    tcase_add_test(tc_namespace, test_ns_separator_in_uri);
 #if defined(XML_CONTEXT_BYTES)
   tcase_add_test(tc_basic, test_get_buffer_3_overflow);
 #endif
