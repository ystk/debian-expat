From: Markus Koschany <apo@debian.org>
Date: Mon, 31 Jan 2022 17:01:41 +0100
Subject: CVE-2022-23852

Origin: https://github.com/libexpat/libexpat/commit/178d26f50af21ec23d6e43814b9b602590b5865c
---
 lib/xmlparse.c   |  5 +++++
 tests/runtests.c | 27 +++++++++++++++++++++++++++
 2 files changed, 32 insertions(+)

--- a/lib/xmlparse.c
+++ b/lib/xmlparse.c
@@ -1745,6 +1745,11 @@ XML_GetBuffer(XML_Parser parser, int len
 
     if (keep > XML_CONTEXT_BYTES)
       keep = XML_CONTEXT_BYTES;
+    /* Detect and prevent integer overflow */
+    if (keep > INT_MAX - neededSize) {
+      errorCode = XML_ERROR_NO_MEMORY;
+      return NULL;
+    }
     neededSize += keep;
 #endif  /* defined XML_CONTEXT_BYTES */
     if (neededSize  <= bufferLim - buffer) {
--- a/tests/runtests.c
+++ b/tests/runtests.c
@@ -14,6 +14,8 @@
 #include <string.h>
 #include <stdint.h>
 
+#include <limits.h>
+
 #include "expat.h"
 #include "chardata.h"
 #include "minicheck.h"
@@ -1411,6 +1413,30 @@ START_TEST(test_ns_unbound_prefix_on_ele
 }
 END_TEST
 
+/* Test for signed integer overflow CVE-2022-23852 */
+#if defined(XML_CONTEXT_BYTES)
+START_TEST(test_get_buffer_3_overflow) {
+  XML_Parser parser = XML_ParserCreate(NULL);
+  assert(parser != NULL);
+
+  const char *const text = "\n";
+  const int expectedKeepValue = (int)strlen(text);
+
+  // After this call, variable "keep" in XML_GetBuffer will
+  // have value expectedKeepValue
+  if (XML_Parse(parser, text, (int)strlen(text), XML_FALSE /* isFinal */)
+      == XML_STATUS_ERROR)
+    xml_failure(parser);
+
+  assert(expectedKeepValue > 0);
+  if (XML_GetBuffer(parser, INT_MAX - expectedKeepValue + 1) != NULL)
+    fail("enlarging buffer not failed");
+
+  XML_ParserFree(parser);
+}
+END_TEST
+#endif // defined(XML_CONTEXT_BYTES)
+
 static Suite *
 make_suite(void)
 {
@@ -1478,6 +1504,9 @@ make_suite(void)
     tcase_add_test(tc_namespace, test_ns_duplicate_attrs_diff_prefixes);
     tcase_add_test(tc_namespace, test_ns_unbound_prefix_on_attribute);
     tcase_add_test(tc_namespace, test_ns_unbound_prefix_on_element);
+#if defined(XML_CONTEXT_BYTES)
+  tcase_add_test(tc_basic, test_get_buffer_3_overflow);
+#endif
 
     return s;
 }
